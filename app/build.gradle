apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'//启用扩展支持直接使用ID
apply plugin: 'kotlin-kapt'
android {
    compileSdkVersion 27
    defaultConfig {
        multiDexEnabled true
        applicationId "czh.fast.sample"
        minSdkVersion 19
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
//    android.applicationVariants.all { variant ->
//        variant.outputs.all {
//            if (variant.name.endsWith("Debug")) {
//                //debug包
//                outputFileName = "$applicationId _v${defaultConfig.versionName}_${debugTime()}_code${defaultConfig.versionCode}_debug.apk"
//            } else {
//                //release包
//                outputFileName = "$applicationId _v${defaultConfig.versionName}_code${defaultConfig.versionCode}_${releaseTime()}_release.apk"
//            }
//        }
//    }


}

static def releaseTime() {
    return new Date().format("yyyy-MM-dd-HH-mm", TimeZone.getDefault())//包含时分秒
}

static def debugTime() {
    return new Date().format("yyyy", TimeZone.getDefault())
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    api 'com.android.support:multidex:1.0.1'
    implementation project(':lib')

    kapt "com.github.Raizlabs.DBFlow:dbflow-processor:${dbflow_version}"
    // gradle 3.0.0 可以使用 implementation，否则用 compile
    api "com.github.Raizlabs.DBFlow:dbflow-core:$dbflow_version"
    api "com.github.Raizlabs.DBFlow:dbflow:$dbflow_version"
    api "com.github.Raizlabs.DBFlow:dbflow-kotlinextensions:${dbflow_version}"

    implementation 'android.arch.lifecycle:extensions:1.1.1'


}
repositories {
    mavenCentral()
}
